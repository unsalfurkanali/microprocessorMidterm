CCS PCM C Compiler, Version 5.015, 5967               13-Dec-20 23:34

               Filename:   C:\Users\Furkan\Desktop\Microprocessor Midterm\ledBlinkingwithTimer\source\main.lst

               ROM used:   142 words (2%)
                           Largest free fragment is 2048
               RAM used:   15 (4%) at main() level
                           15 (4%) worst case
               Stack used: 1 locations (0 in main + 1 for interrupts)
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   03C
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  BTFSS  0B.5
0018:  GOTO   01B
0019:  BTFSC  0B.2
001A:  GOTO   02C
001B:  MOVF   22,W
001C:  MOVWF  04
001D:  MOVF   23,W
001E:  MOVWF  77
001F:  MOVF   24,W
0020:  MOVWF  78
0021:  MOVF   25,W
0022:  MOVWF  79
0023:  MOVF   26,W
0024:  MOVWF  7A
0025:  MOVF   20,W
0026:  MOVWF  0A
0027:  SWAPF  21,W
0028:  MOVWF  03
0029:  SWAPF  7F,F
002A:  SWAPF  7F,W
002B:  RETFIE
002C:  BCF    0A.3
002D:  BCF    0A.4
002E:  GOTO   02F
.................... #include <16F877A.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
....................  
.................... #list 
....................  
.................... #device ADC=16 
....................  
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... #FUSES NOBROWNOUT               //No brownout reset 
.................... #FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
....................  
.................... #use delay(crystal=4000000) 
.................... #use fast_io(b) 
....................  
.................... int i, j = 0; 
....................  
.................... /* Timer interrupt function */ 
.................... #int_timer0 
.................... void timer0interrupt() { 
....................    set_timer0(60); 
002F:  MOVLW  3C
0030:  MOVWF  01
....................    output_b(i); 
0031:  MOVF   27,W
0032:  MOVWF  06
....................    i++; 
0033:  INCF   27,F
....................    if(i==9) i=0; 
0034:  MOVF   27,W
0035:  SUBLW  09
0036:  BTFSC  03.2
0037:  CLRF   27
....................  
0038:  BCF    0B.2
0039:  BCF    0A.3
003A:  BCF    0A.4
003B:  GOTO   01B
.................... } 
....................  
.................... void main() 
003C:  MOVF   03,W
003D:  ANDLW  1F
003E:  MOVWF  03
003F:  CLRF   28
0040:  MOVLW  FF
0041:  MOVWF  29
0042:  BSF    03.5
0043:  BSF    1F.0
0044:  BSF    1F.1
0045:  BSF    1F.2
0046:  BCF    1F.3
0047:  MOVLW  07
0048:  MOVWF  1C
0049:  BCF    03.7
.................... { 
....................    setup_psp(PSP_DISABLED); 
004A:  BCF    09.4
....................    setup_timer_1(T1_DISABLED); 
004B:  BCF    03.5
004C:  CLRF   10
....................    setup_timer_2(T2_DISABLED, 0, 1); 
004D:  MOVLW  00
004E:  MOVWF  78
004F:  MOVWF  12
0050:  MOVLW  00
0051:  BSF    03.5
0052:  MOVWF  12
....................    setup_adc_ports(NO_ANALOGS); 
0053:  BSF    1F.0
0054:  BSF    1F.1
0055:  BSF    1F.2
0056:  BCF    1F.3
....................    setup_adc(ADC_OFF); 
0057:  BCF    03.5
0058:  BCF    1F.0
....................    setup_CCP1(CCP_OFF); 
0059:  MOVLW  F0
005A:  ANDWF  17,F
....................    setup_CCP2(CCP_OFF); 
005B:  ANDWF  1D,F
....................     
....................    set_tris_b(0x00); 
005C:  MOVLW  00
005D:  BSF    03.5
005E:  MOVWF  06
....................    set_tris_d(0x00); 
005F:  MOVWF  08
....................    set_tris_c(0x80); 
0060:  MOVLW  80
0061:  MOVWF  07
0062:  BCF    03.5
0063:  MOVWF  29
....................    output_b(0x00); 
0064:  CLRF   06
....................    output_d(0x00); 
0065:  BSF    03.5
0066:  CLRF   08
0067:  BCF    03.5
0068:  CLRF   08
....................     
....................    /*Timer 1 Interrupt enabled. */ 
....................    setup_timer_0(RTCC_INTERNAL | RTCC_DIV_256); 
0069:  BSF    03.5
006A:  MOVF   01,W
006B:  ANDLW  C0
006C:  IORLW  07
006D:  MOVWF  01
....................    set_timer0(60); 
006E:  MOVLW  3C
006F:  BCF    03.5
0070:  MOVWF  01
....................    enable_interrupts(INT_timer0); 
0071:  BSF    0B.5
....................    enable_interrupts(GLOBAL); 
0072:  MOVLW  C0
0073:  IORWF  0B,F
....................    while(TRUE) 
....................    { 
....................      if(input(pin_c7)) { 
0074:  BSF    29.7
0075:  MOVF   29,W
0076:  BSF    03.5
0077:  MOVWF  07
0078:  BCF    03.5
0079:  BTFSS  07.7
007A:  GOTO   08C
....................          output_d(++j); 
007B:  INCF   28,F
007C:  BSF    03.5
007D:  CLRF   08
007E:  BCF    03.5
007F:  MOVF   28,W
0080:  MOVWF  08
....................          if(j==9) j=0; 
0081:  MOVF   28,W
0082:  SUBLW  09
0083:  BTFSC  03.2
0084:  CLRF   28
....................          while(input(pin_c7)) ; 
0085:  BSF    29.7
0086:  MOVF   29,W
0087:  BSF    03.5
0088:  MOVWF  07
0089:  BCF    03.5
008A:  BTFSC  07.7
008B:  GOTO   085
....................      } 
008C:  GOTO   074
....................    } 
....................  
.................... } 
008D:  SLEEP

Configuration Fuses:
   Word  1: 3F31   XT NOWDT PUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
