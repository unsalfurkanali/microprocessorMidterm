CCS PCM C Compiler, Version 5.015, 5967               14-Dec-20 00:40

               Filename:   C:\Users\Furkan\Desktop\Microprocessor Midterm\ledBlinkingwithTimer\source\main.lst

               ROM used:   151 words (2%)
                           Largest free fragment is 2048
               RAM used:   14 (4%) at main() level
                           15 (4%) worst case
               Stack used: 2 locations (1 in main + 1 for interrupts)
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   055
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  BTFSS  0B.5
0018:  GOTO   01B
0019:  BTFSC  0B.2
001A:  GOTO   02C
001B:  MOVF   22,W
001C:  MOVWF  04
001D:  MOVF   23,W
001E:  MOVWF  77
001F:  MOVF   24,W
0020:  MOVWF  78
0021:  MOVF   25,W
0022:  MOVWF  79
0023:  MOVF   26,W
0024:  MOVWF  7A
0025:  MOVF   20,W
0026:  MOVWF  0A
0027:  SWAPF  21,W
0028:  MOVWF  03
0029:  SWAPF  7F,F
002A:  SWAPF  7F,W
002B:  RETFIE
002C:  BCF    0A.3
002D:  BCF    0A.4
002E:  GOTO   02F
.................... #include <16F877A.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
....................  
.................... #list 
....................  
.................... #device ADC=16 
....................  
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... #FUSES NOBROWNOUT               //No brownout reset 
.................... #FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
....................  
.................... #use delay(crystal=4000000) 
*
0040:  MOVLW  29
0041:  MOVWF  04
0042:  BCF    03.7
0043:  MOVF   00,W
0044:  BTFSC  03.2
0045:  GOTO   054
0046:  MOVLW  01
0047:  MOVWF  78
0048:  CLRF   77
0049:  DECFSZ 77,F
004A:  GOTO   049
004B:  DECFSZ 78,F
004C:  GOTO   048
004D:  MOVLW  4A
004E:  MOVWF  77
004F:  DECFSZ 77,F
0050:  GOTO   04F
0051:  GOTO   052
0052:  DECFSZ 00,F
0053:  GOTO   046
0054:  RETURN
.................... #use fast_io(b) 
....................  
.................... int i=0; 
....................  
.................... /* Timer interrupt function */ 
.................... #int_timer0 
.................... void timer0interrupt() { 
....................    set_timer0(60); 
*
002F:  MOVLW  3C
0030:  MOVWF  01
....................    i++; 
0031:  INCF   27,F
....................     
....................    if(i==50) output_high(pin_b0); 
0032:  MOVF   27,W
0033:  SUBLW  32
0034:  BTFSC  03.2
0035:  BSF    06.0
....................    if(i==100) { 
0036:  MOVF   27,W
0037:  SUBLW  64
0038:  BTFSS  03.2
0039:  GOTO   03C
....................       output_low(pin_b0); 
003A:  BCF    06.0
....................       i=0; 
003B:  CLRF   27
....................    } 
003C:  BCF    0B.2
003D:  BCF    0A.3
003E:  BCF    0A.4
003F:  GOTO   01B
.................... } 
....................  
.................... void main() 
*
0055:  MOVF   03,W
0056:  ANDLW  1F
0057:  MOVWF  03
0058:  CLRF   27
0059:  MOVLW  FF
005A:  MOVWF  28
005B:  BSF    03.5
005C:  BSF    1F.0
005D:  BSF    1F.1
005E:  BSF    1F.2
005F:  BCF    1F.3
0060:  MOVLW  07
0061:  MOVWF  1C
0062:  BCF    03.7
.................... { 
....................    setup_psp(PSP_DISABLED); 
0063:  BCF    09.4
....................    setup_timer_1(T1_DISABLED); 
0064:  BCF    03.5
0065:  CLRF   10
....................    setup_timer_2(T2_DISABLED, 0, 1); 
0066:  MOVLW  00
0067:  MOVWF  78
0068:  MOVWF  12
0069:  MOVLW  00
006A:  BSF    03.5
006B:  MOVWF  12
....................    setup_adc_ports(NO_ANALOGS); 
006C:  BSF    1F.0
006D:  BSF    1F.1
006E:  BSF    1F.2
006F:  BCF    1F.3
....................    setup_adc(ADC_OFF); 
0070:  BCF    03.5
0071:  BCF    1F.0
....................    setup_CCP1(CCP_OFF); 
0072:  MOVLW  F0
0073:  ANDWF  17,F
....................    setup_CCP2(CCP_OFF); 
0074:  ANDWF  1D,F
....................     
....................    set_tris_b(0x00); 
0075:  MOVLW  00
0076:  BSF    03.5
0077:  MOVWF  06
....................    set_tris_d(0x00); 
0078:  MOVWF  08
....................    set_tris_c(0x80); 
0079:  MOVLW  80
007A:  MOVWF  07
007B:  BCF    03.5
007C:  MOVWF  28
....................    output_b(0x00); 
007D:  CLRF   06
....................    output_d(0x00); 
007E:  BSF    03.5
007F:  CLRF   08
0080:  BCF    03.5
0081:  CLRF   08
....................     
....................    /*Timer 1 Interrupt enabled. */ 
....................    setup_timer_0(RTCC_INTERNAL | RTCC_DIV_256); 
0082:  BSF    03.5
0083:  MOVF   01,W
0084:  ANDLW  C0
0085:  IORLW  07
0086:  MOVWF  01
....................    set_timer0(60); 
0087:  MOVLW  3C
0088:  BCF    03.5
0089:  MOVWF  01
....................    enable_interrupts(INT_timer0); 
008A:  BSF    0B.5
....................    enable_interrupts(GLOBAL); 
008B:  MOVLW  C0
008C:  IORWF  0B,F
....................    while(TRUE) { 
....................       output_high(pin_b1); 
008D:  BSF    06.1
....................       delay_ms(50); 
008E:  MOVLW  32
008F:  MOVWF  29
0090:  CALL   040
....................       output_low(pin_b1); 
0091:  BCF    06.1
....................       delay_ms(50); 
0092:  MOVLW  32
0093:  MOVWF  29
0094:  CALL   040
0095:  GOTO   08D
....................    } 
....................  
.................... } 
0096:  SLEEP

Configuration Fuses:
   Word  1: 3F31   XT NOWDT PUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
