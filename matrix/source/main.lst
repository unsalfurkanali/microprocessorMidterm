CCS PCM C Compiler, Version 5.015, 5967               08-Dec-20 16:50

               Filename:   C:\Users\Furkan\Desktop\Microprocessor Midterm\matrix\source\main.lst

               ROM used:   209 words (3%)
                           Largest free fragment is 2048
               RAM used:   29 (8%) at main() level
                           36 (10%) worst case
               Stack used: 3 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   073
0003:  NOP
.................... #include <16F877A.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
*
002C:  BCF    0A.0
002D:  BCF    0A.1
002E:  BCF    0A.2
002F:  ADDWF  02,F
0030:  GOTO   00A
0031:  GOTO   00E
0032:  GOTO   012
0033:  GOTO   016
0034:  GOTO   01A
0035:  GOTO   01E
0036:  GOTO   022
0037:  GOTO   026
....................  
.................... #list 
....................  
.................... #device ADC=16 
....................  
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... #FUSES NOBROWNOUT               //No brownout reset 
.................... #FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
....................  
.................... #use delay(crystal=4MHz) 
*
0058:  MOVLW  3E
0059:  MOVWF  04
005A:  BCF    03.7
005B:  MOVF   00,W
005C:  BTFSC  03.2
005D:  GOTO   06C
005E:  MOVLW  01
005F:  MOVWF  78
0060:  CLRF   77
0061:  DECFSZ 77,F
0062:  GOTO   061
0063:  DECFSZ 78,F
0064:  GOTO   060
0065:  MOVLW  4A
0066:  MOVWF  77
0067:  DECFSZ 77,F
0068:  GOTO   067
0069:  GOTO   06A
006A:  DECFSZ 00,F
006B:  GOTO   05E
....................  
.................... #use fast_io(b) 
.................... #use fast_io(d) 
....................  
.................... int U[] = {0xff, 0x86, 0x7f, 0x7f, 0x7f, 0x86, 0xff, 0xff}; 
*
007E:  MOVLW  FF
007F:  BCF    03.5
0080:  MOVWF  20
0081:  MOVLW  86
0082:  MOVWF  21
0083:  MOVLW  7F
0084:  MOVWF  22
0085:  MOVWF  23
0086:  MOVWF  24
0087:  MOVLW  86
0088:  MOVWF  25
0089:  MOVLW  FF
008A:  MOVWF  26
008B:  MOVWF  27
.................... int B[] = {0xff, 0x00, 0x77, 0x77, 0x8f, 0xff, 0xff, 0xff}; 
008C:  MOVWF  28
008D:  CLRF   29
008E:  MOVLW  77
008F:  MOVWF  2A
0090:  MOVWF  2B
0091:  MOVLW  8F
0092:  MOVWF  2C
0093:  MOVLW  FF
0094:  MOVWF  2D
0095:  MOVWF  2E
0096:  MOVWF  2F
.................... int A[] = {0xff, 0x17, 0x57, 0x57, 0x0f, 0xff, 0xff, 0xff}; 
0097:  MOVWF  30
0098:  MOVLW  17
0099:  MOVWF  31
009A:  MOVLW  57
009B:  MOVWF  32
009C:  MOVWF  33
009D:  MOVLW  0F
009E:  MOVWF  34
009F:  MOVLW  FF
00A0:  MOVWF  35
00A1:  MOVWF  36
00A2:  MOVWF  37
.................... int selection(char s) { 
....................    switch(s) { 
*
0004:  MOVF   3E,W
0005:  ADDLW  F8
0006:  BTFSC  03.0
0007:  GOTO   029
0008:  ADDLW  08
0009:  GOTO   02C
....................       case 0: return 0x80; break; 
000A:  MOVLW  80
000B:  MOVWF  78
000C:  GOTO   029
000D:  GOTO   029
....................       case 1: return 0x40; break; 
000E:  MOVLW  40
000F:  MOVWF  78
0010:  GOTO   029
0011:  GOTO   029
....................       case 2: return 0x20; break; 
0012:  MOVLW  20
0013:  MOVWF  78
0014:  GOTO   029
0015:  GOTO   029
....................       case 3: return 0x10; break; 
0016:  MOVLW  10
0017:  MOVWF  78
0018:  GOTO   029
0019:  GOTO   029
....................       case 4: return 0x08; break; 
001A:  MOVLW  08
001B:  MOVWF  78
001C:  GOTO   029
001D:  GOTO   029
....................       case 5: return 0x04; break; 
001E:  MOVLW  04
001F:  MOVWF  78
0020:  GOTO   029
0021:  GOTO   029
....................       case 6: return 0x02; break; 
0022:  MOVLW  02
0023:  MOVWF  78
0024:  GOTO   029
0025:  GOTO   029
....................       case 7: return 0x01; break; 
0026:  MOVLW  01
0027:  MOVWF  78
0028:  GOTO   029
....................    } 
0029:  BCF    0A.3
002A:  BCF    0A.4
002B:  GOTO   04B (RETURN)
.................... } 
....................  
.................... void writeMatrix(char letter[], int repeat) { 
....................    int i, j, k; 
....................     
....................    for(i = 1; i < repeat; i++) { 
*
0038:  MOVLW  01
0039:  MOVWF  3B
003A:  MOVF   3A,W
003B:  SUBWF  3B,W
003C:  BTFSC  03.0
003D:  GOTO   072
....................       for(j= 0; j < 10; j++) { 
003E:  CLRF   3C
003F:  MOVF   3C,W
0040:  SUBLW  09
0041:  BTFSS  03.0
0042:  GOTO   070
....................          for(k = 0; k < 8; k++) { 
0043:  CLRF   3D
0044:  MOVF   3D,W
0045:  SUBLW  07
0046:  BTFSS  03.0
0047:  GOTO   06E
....................             output_d(selection(k)); 
0048:  MOVF   3D,W
0049:  MOVWF  3E
004A:  GOTO   004
004B:  MOVF   78,W
004C:  MOVWF  08
....................             output_b(letter[k]); 
004D:  MOVF   3D,W
004E:  ADDWF  38,W
004F:  MOVWF  04
0050:  BCF    03.7
0051:  BTFSC  39.0
0052:  BSF    03.7
0053:  MOVF   00,W
0054:  MOVWF  3E
0055:  MOVWF  06
....................             delay_ms(1); 
0056:  MOVLW  01
0057:  MOVWF  3E
*
006C:  INCF   3D,F
006D:  GOTO   044
....................          } 
006E:  INCF   3C,F
006F:  GOTO   03F
....................       } 
0070:  INCF   3B,F
0071:  GOTO   03A
....................    } 
0072:  RETURN
.................... } 
....................  
....................  
.................... void main() 
0073:  MOVF   03,W
0074:  ANDLW  1F
0075:  MOVWF  03
0076:  BSF    03.5
0077:  BSF    1F.0
0078:  BSF    1F.1
0079:  BSF    1F.2
007A:  BCF    1F.3
007B:  MOVLW  07
007C:  MOVWF  1C
007D:  BCF    03.7
.................... { 
....................    setup_psp(PSP_DISABLED); 
*
00A3:  BSF    03.5
00A4:  BCF    09.4
....................    setup_timer_1(T1_DISABLED); 
00A5:  BCF    03.5
00A6:  CLRF   10
....................    setup_timer_2(T2_DISABLED, 0, 1); 
00A7:  MOVLW  00
00A8:  MOVWF  78
00A9:  MOVWF  12
00AA:  MOVLW  00
00AB:  BSF    03.5
00AC:  MOVWF  12
....................    setup_adc_ports(NO_ANALOGS); 
00AD:  BSF    1F.0
00AE:  BSF    1F.1
00AF:  BSF    1F.2
00B0:  BCF    1F.3
....................    setup_adc(ADC_OFF); 
00B1:  BCF    03.5
00B2:  BCF    1F.0
....................    setup_CCP1(CCP_OFF); 
00B3:  MOVLW  F0
00B4:  ANDWF  17,F
....................    setup_CCP2(CCP_OFF); 
00B5:  ANDWF  1D,F
....................     
....................    set_tris_b(0x00); 
00B6:  MOVLW  00
00B7:  BSF    03.5
00B8:  MOVWF  06
....................    set_tris_d(0x00); 
00B9:  MOVWF  08
....................    output_b(0x00); 
00BA:  BCF    03.5
00BB:  CLRF   06
....................    output_d(0x00); 
00BC:  CLRF   08
....................    while(1) 
....................    { 
....................       writeMatrix(U, 20); 
00BD:  CLRF   39
00BE:  MOVLW  20
00BF:  MOVWF  38
00C0:  MOVLW  14
00C1:  MOVWF  3A
00C2:  CALL   038
....................       writeMatrix(B, 20); 
00C3:  CLRF   39
00C4:  MOVLW  28
00C5:  MOVWF  38
00C6:  MOVLW  14
00C7:  MOVWF  3A
00C8:  CALL   038
....................       writeMatrix(A, 20); 
00C9:  CLRF   39
00CA:  MOVLW  30
00CB:  MOVWF  38
00CC:  MOVLW  14
00CD:  MOVWF  3A
00CE:  CALL   038
00CF:  GOTO   0BD
....................    } 
....................  
.................... } 
00D0:  SLEEP

Configuration Fuses:
   Word  1: 3F31   XT NOWDT PUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
