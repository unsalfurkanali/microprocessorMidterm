CCS PCM C Compiler, Version 5.015, 5967               13-Dec-20 23:16

               Filename:   C:\Users\Furkan\Desktop\Microprocessor Midterm\ledBlinkingwithButton\source\main.lst

               ROM used:   79 words (1%)
                           Largest free fragment is 2048
               RAM used:   6 (2%) at main() level
                           7 (2%) worst case
               Stack used: 1 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   01B
0003:  NOP
.................... #include <16F877A.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
....................  
.................... #list 
....................  
.................... #device ADC=16 
....................  
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... #FUSES NOBROWNOUT               //No brownout reset 
.................... #FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
....................  
.................... #use delay(crystal=4000000) 
0004:  MOVLW  21
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   018
000A:  MOVLW  01
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  4A
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  GOTO   016
0016:  DECFSZ 00,F
0017:  GOTO   00A
0018:  BCF    0A.3
0019:  BCF    0A.4
001A:  GOTO   04D (RETURN)
.................... #use fast_io(b) 
.................... #use fast_io(d) 
.................... int1 buttonState = 0; 
....................  
.................... void main() 
001B:  MOVF   03,W
001C:  ANDLW  1F
001D:  MOVWF  03
001E:  BCF    20.0
001F:  BSF    03.5
0020:  BSF    1F.0
0021:  BSF    1F.1
0022:  BSF    1F.2
0023:  BCF    1F.3
0024:  MOVLW  07
0025:  MOVWF  1C
0026:  BCF    03.7
.................... { 
....................    setup_psp(PSP_DISABLED); 
0027:  BCF    09.4
....................    setup_timer_1(T1_DISABLED); 
0028:  BCF    03.5
0029:  CLRF   10
....................    setup_timer_2(T2_DISABLED, 0, 1); 
002A:  MOVLW  00
002B:  MOVWF  78
002C:  MOVWF  12
002D:  MOVLW  00
002E:  BSF    03.5
002F:  MOVWF  12
....................    setup_adc_ports(NO_ANALOGS); 
0030:  BSF    1F.0
0031:  BSF    1F.1
0032:  BSF    1F.2
0033:  BCF    1F.3
....................    setup_adc(ADC_OFF); 
0034:  BCF    03.5
0035:  BCF    1F.0
....................    setup_CCP1(CCP_OFF); 
0036:  MOVLW  F0
0037:  ANDWF  17,F
....................    setup_CCP2(CCP_OFF); 
0038:  ANDWF  1D,F
....................     
....................    set_tris_b(0x00); 
0039:  MOVLW  00
003A:  BSF    03.5
003B:  MOVWF  06
....................    set_tris_d(0xff); 
003C:  MOVLW  FF
003D:  MOVWF  08
....................    output_b(0x00); 
003E:  BCF    03.5
003F:  CLRF   06
....................    while(TRUE) 
....................    { 
....................      buttonState = input(pin_d7); 
0040:  BCF    20.0
0041:  BTFSC  08.7
0042:  BSF    20.0
....................      if(buttonState) { 
0043:  BTFSS  20.0
0044:  GOTO   049
....................          output_high(pin_b0); 
0045:  BSF    06.0
....................          while(input(pin_d7)) ; 
0046:  BTFSC  08.7
0047:  GOTO   046
....................      } 
0048:  GOTO   04A
....................      else output_low(pin_b0); 
0049:  BCF    06.0
....................      delay_ms(50); 
004A:  MOVLW  32
004B:  MOVWF  21
004C:  GOTO   004
004D:  GOTO   040
....................    } 
....................  
.................... } 
004E:  SLEEP

Configuration Fuses:
   Word  1: 3F31   XT NOWDT PUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
